{"version":3,"sources":["Notification.jsx","content.js","App.jsx","index.js"],"names":["Notification","message","style","includes","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","data","catch","err","console","error","newObject","post","response","id","put","delete","res","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","search","searchBy","sucess","setSucess","useEffect","content","initialNotes","log","type","value","onChange","e","target","filter","name","toLowerCase","required","onSubmit","preventDefault","finder","person","trim","length","window","confirm","number","map","setTimeout","concat","personIndex","onClick","ids","returnedNote","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.edfb1b21.chunk.js","sourcesContent":["const Notification = ({ message }) => {\n  const red = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n  const green = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n  if (!message) return null\n  return (\n    <div style={message.includes('added') ? green : red}>\n      {message}\n    </div>\n  )\n}\nexport default Notification","import axios from 'axios'\nconst baseUrl = \"/api/persons\"\nconst getAll = () => {\n  return (axios.get(baseUrl)\n    .then(({ data }) => data)\n    .catch(err => console.error(err)))\n}\nconst create = (newObject) => {\n  return (axios.post(baseUrl, newObject)\n    .then(response => response.data))\n}\nconst update = (id, newObject) => {\n  return (axios.put(`${baseUrl}/${id}`, newObject)\n    .then(response => response.data))\n}\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return (request.then(res => res.data))\n}\nexport default { getAll, create, update, deletePerson }\n","import { useState, useEffect } from 'react';\nimport Notification from './Notification';\nimport content from './content';\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNum, setNewNum] = useState('');\n  const [search, searchBy] = useState('')\n  const [sucess, setSucess] = useState('')\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const finder = persons.filter((person) => person.name === newName.trim())\n    finder.length ? (\n      <>\n        {window.confirm('This name already exists,replace the old numbers') === true\n          ? content.update(finder[0].id, { name: newName, number: newNum }).then((value) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== finder[0].id ? person : value\n              )\n            );\n          }\n          )\n            .catch((err) => {\n              setSucess('name has already be deleted from the server')\n              setTimeout(() => {\n                setSucess('')\n              }, 2000);\n            })\n          : ''}\n      </>\n    ) : (\n      content\n        .create({ name: newName, number: newNum })\n        .then(data => {\n          setPersons(persons.concat(data))\n          setSucess('added new name')\n          setTimeout(() => {\n            setSucess('')\n          }, 5000);\n        })\n    )\n  };\n  const handleNoteChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const filterWith = (e) => {\n    searchBy(e.target.value)\n    setPersons(persons.filter(({ name }) => name.toLowerCase().includes(search.toLowerCase())))\n  }\n  useEffect(() => {\n    content\n      .getAll()\n      .then((initialNotes) => {\n        console.log('promise fulfilled');\n        setPersons(initialNotes)\n      })\n  }, [])\n  // console.log('render', persons.length, 'persons')\n  const toggleImportanceOf = ids => {\n    content\n      .deletePerson(ids)\n      .then(returnedNote => {\n        setPersons(persons.filter(({ id }) => id !== ids))\n      })\n      .catch(error => {\n        console.error(error)\n      })\n  }\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <Notification message={sucess} />\n      <h2>add a new</h2>\n      <div>filter shown with\n        <input\n          type='text'\n          value={search}\n          onChange={filterWith}\n          required\n        />\n      </div>\n      <br />\n      <br />\n      <form onSubmit={handleSubmit}>\n        <div>name : <input\n          type='text'\n          value={newName}\n          onChange={handleNoteChange}\n          required\n        /></div>\n        {/* <br/>  */}\n        <div>number : <input\n          type='text'\n          value={newNum}\n          onChange={(e) => setNewNum(e.target.value)}\n          required\n        /></div>\n        <br />\n        <button>add</button>\n        <br />\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n        {\n          persons.map((person, personIndex) =>\n            <li key={`list${personIndex}`}>{person.name} {person.number}  <button onClick={() => toggleImportanceOf(person.id)}>Delete</button></li>\n          )}\n      </ul>\n    </div>\n  );\n};\nexport default App","import ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />\n  , document.getElementById(\"root\"));"],"sourceRoot":""}